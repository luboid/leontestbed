package com.topfinance.cfg.jpa;

// Generated 2009-6-19 13:56:29 by Hibernate Tools 3.2.2.GA

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.StringUtils;

import com.topfinance.cfg.ICfgProtocol;

/**
 * SysDepartment generated by hbm2java
 */
@Entity
@Table(name = "T_CFG_PROTOCOL")
public class JpaCfgProtocol implements ICfgProtocol, Serializable {

    // oid 主键 integer
    private Integer uid;

    // name 名称 varchar2
    private String name;

    
    private Map<String, String> map;
    
    private static final String KEY1 = "key1";
    private static final String KEY2 = "key2";
    
    
    public JpaCfgProtocol() {
        super();
    }

    public JpaCfgProtocol(Integer uid) {
        super();
        this.uid = uid;

    }

    @Id
    @Column(name = "OID", nullable = false)
    @SequenceGenerator(name = "CFG_PROTOCOL_GEN", sequenceName = "S_CFG_SEQUNCE") 
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "CFG_PROTOCOL_GEN")
    public Integer getUid() {
        return this.uid;
    }

    public void setUid(Integer uid) {
        this.uid = uid;
    }

    @Column(name = "NAME")
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "CONFIG")
    /**
     * only called by hibernate when inserting db record from an object.
     */
    private String getConfig() {
        StringBuffer buf = new StringBuffer();
        for(String key:getMap().keySet()) {
            if(buf.length()!=0) {
                buf.append("|");
            }
            buf.append(key).append("=").append(getMap().get(key));
        }
        return buf.toString();
    }
    
    /**
     * only called by hibernate when instantiate an object from db record
     */
    private void setConfig(String config) {
        if(!StringUtils.isEmpty(config)) {
            String[] entries = StringUtils.split(config, "|");
            for(String entry : entries) {
                String[] pair = StringUtils.split(entry, "=");
                if(pair.length!=2) {
                    throw new RuntimeException("sth wrong in parsing entry: "+entry);
                }
                getMap().put(pair[0], pair[1]);
            }
        }
    }
    @Transient
    public String getKey1() {
        return getMap().get(KEY1);
    }
    public String setKey1(String value) {
        return getMap().put(KEY1, value);
    }
    @Transient
    public String getKey2() {
        return getMap().get(KEY2);
    }
    public String setKey2(String value) {
        return getMap().put(KEY2, value);
    }
    
    @Transient
    private Map<String, String> getMap() {
        if(map==null) {
            map = new HashMap<String, String>();
        }
        return map;
    }
    
}
