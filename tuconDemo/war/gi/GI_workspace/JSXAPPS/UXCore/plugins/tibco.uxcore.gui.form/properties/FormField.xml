<?xml version="1.0" encoding="UTF-8"?><!--
  ~ Copyright (c) 2001-2007, TIBCO Software Inc.
  ~ Use, modification, and distribution subject to terms of license.
  --><data jsxid="jsxroot">

	<record group="object" include="jsxplugin://tibco.uxcore.common/properties/master.xml"/>


	<record group="1" jsxid="jsx3block" jsxtext="Block">

		<record children="1" group="jsxtagname" include="jsxplugin://tibco.uxcore.common/properties/master.xml"/>

	</record>

    <record group="1" jsxid="uxcoreFormRow" jsxtext="Form Field">
        <record jsxid="fieldtitletext" jsxtext="Title Text"
            jsxtip="Sets the title label for the form row"
            docgetter="getTitleText" docsetter="setTitleText"
            eval="0"
            jsxexecute="objJSX.setTitleText(vntValue, true);"
            jsxmask="jsxtext"/>
      <record jsxid="jsxtitledisplay"  jsxtext="Title Display"
          docsetter="setTitleDisplay"
          docgetter="getTitleDisplay"
          jsxexecute="objJSX.setTitleDisplay(vntValue, true);"
          docdefault="Block (&lt;code&gt;jsx3.gui.Block.DISPLAYBLOCK&lt;/code&gt;)"
          eval="0"
          jsxmask="jsxselect"
          jsxtip="Sets display of field title, When set to None, title is hidden.">
        <enum jsxid="jsx3.gui.Block.DISPLAYBLOCK" jsxtext="Block"/>
        <enum jsxid="jsx3.gui.Block.DISPLAYNONE" jsxtext="None"/>
      </record>

        <record jsxid="fieldinstructionstext"  jsxtext="Instructions Text"
            docgetter="getInstructionsText"
            docsetter="setInstructionsText"
            jsxexecute="objJSX.setInstructionsText(vntValue, true);"
            eval="0"
            jsxmask="jsxtext"
            jsxtip="Sets the instructions text for the form row">
        </record>
        <record jsxid="alwaysShowInstructions"  jsxtext="Always Show Instructions"
            docsetter="setAlwaysShowInstructions"
            docgetter="getAlwaysShowInstructions"
            jsxexecute="objJSX.setAlwaysShowInstructions(vntValue, true);"
            docdefault="jsx3.Boolean.FALSE"
            eval="1"
            jsxmask="jsxselect"
            jsxtip="Sets whether or not to show the instructions always (even when in view mode).">
          <enum jsxid="jsx3.Boolean.FALSE" jsxtext="False"/>
          <enum jsxid="jsx3.Boolean.TRUE" jsxtext="True"/>
        </record>
        <record jsxid="fieldexampletext"  jsxtext="ExampleText"
            docgetter="getExampleText"
            docsetter="setExampleText"
            jsxexecute="objJSX.setExampleText(vntValue, true);"
            eval="0"
            jsxmask="jsxtext"
            jsxtip="Sets the example text for the form row">
        </record>
<!--        <record jsxid="fieldvalue"  jsxtext="Value"
            docgetter="getValue"
            docsetter="setValue"
            jsxexecute="objJSX.setValue(vntValue, true);"
            eval="0"
            jsxmask="jsxtext"
            jsxtip="Sets the value for the text field in the form row">
        </record> -->
        <record jsxid="cdfattribute"  jsxtext="CDF Attribute"
            docgetter="getCDFAttribute"
            docsetter="setCDFAttribute"
            jsxexecute="objJSX.setCDFAttribute(vntValue);"
            eval="0"
            jsxmask="jsxtext"
            jsxtip="Sets the CDF attribute this form row is used to edit">
        </record>
        <record jsxid="isrequired"  jsxtext="Required?"
            docgetter="isRequired"
            docsetter="setRequired"
            jsxexecute="objJSX.setRequired(vntValue, true);"
            eval="0"
            jsxmask="jsxselect"
            jsxtip="Sets whether or not the form row is required">
            <enum jsxid="jsx3.Boolean.TRUE" jsxtext="True"/>
            <enum jsxid="jsx3.Boolean.FALSE" jsxtext="False"/>
        </record>
        <record jsxid="hideoptionalstring"  jsxtext="Hide Optional String?"
            docgetter="isHideOptionalString"
            docsetter="setHideOptionalString"
            jsxexecute="objJSX.setHideOptionalString(vntValue, true);"
            eval="0"
            jsxmask="jsxselect"
            jsxtip="Sets whether or not the optional string (if any) after the field title should be displayed">
            <enum jsxid="jsx3.Boolean.TRUE" jsxtext="True"/>
            <enum jsxid="jsx3.Boolean.FALSE" jsxtext="False"/>
        </record>
        <record jsxid="hiderequiredstring"  jsxtext="Hide Required String?"
            docgetter="isHideRequiredString"
            docsetter="setHideRequiredString"
            jsxexecute="objJSX.setHideRequiredString(vntValue, true);"
            eval="0"
            jsxmask="jsxselect"
            jsxtip="Sets whether or not the rerquired string (if any) after the field title should be displayed">
            <enum jsxid="jsx3.Boolean.TRUE" jsxtext="True"/>
            <enum jsxid="jsx3.Boolean.FALSE" jsxtext="False"/>
        </record>
        <record jsxid="validator"  jsxtext="Field Validator(s)"
            docgetter="getFieldValidator"
            docsetter="setFieldValidator"
            jsxexecute="objJSX.setFieldValidator(vntValue);"
            eval="0"
            jsxmask="jsxtext"
            jsxtip="Sets the for row's data validator(s).  Multiple validators are supported by separating them with a comma (no spaces after the comma). Validators will be executed in the order in which they appear in this list.  Each validator may be one of the following predefined validators:&lt;br/&gt;&lt;br/&gt;@noWhitespace - disallows whitespace characters anywhere in the value&lt;br/&gt;@url - checks that the value is the proper format for a url&lt;br/&gt;@portNumber - validates that the value represents a valid port number&lt;br/&gt;@digitsOnly - validates that only numeric characters appear in the value&lt;br/&gt;@IPAddress - validates that the value is the proper format for an IP Address&lt;br/&gt;@number - validates that the value is numeric (positive or negative, float or integer)&lt;br/&gt;@integer - validates that the value is a valid integer&lt;br/&gt;@isPositiveInteger - validates that the value is a positive integer&lt;br/&gt;@isPositiveFloat - validates that the value is a positive number (integer or float)&lt;br/&gt;@isNegativeInteger - validates that the value is a negative integer&lt;br/&gt;@isNegativeFloat - validates that the value is a negative number (integer or float)&lt;br/&gt;@lengthGreaterThan[X] - validates that the number of characters in the value string is greater than X&lt;br/&gt;@lengthLessThan[X] - validates that the number of characters in the value is less than X&lt;br/&gt;@lengthEquals[X] - validates that the number of characters in the value is exactly X&lt;br/&gt;&lt;br/&gt;or you may define your own custom scriptlet that evaluates to the status of the validation.  'true', true, and jsx3.Boolean.TRUE will all indicate the field validation succeeded. 'false', false, and jsx3.Boolean.FALSE will all indicate the field failed validation.  All other values will indicate a failed validation, and will be used as the error text.  For example:&lt;br/&gt;&lt;br/&gt;var ret = (value == 'a'); if(!ret) {ret = &quot;Only the value 'a' is supported&quot;;} ret;&lt;br/&gt;&lt;br/&gt;will evaluate to true if the value is 'a', otherwise it will evaluate to the error text string &quot;Only the value 'a' is supported&quot;&lt;br/&gt;&lt;br/&gt;The following context variables are available from the scriptlet:&lt;br/&gt;&lt;br/&gt;&lt;b&gt;objJSX&lt;/b&gt;: a reference to the jsx3.gui form row object&lt;br/&gt;&lt;b&gt;value&lt;/b&gt;: the current value of the field to be validated&lt;br/&gt;&lt;br/&gt;&lt;b&gt;NOTE:&lt;/b&gt; multiple scriptlet validators are supported, but there should never be 2 successive scriptlets in the validation list.  They should just be consolidated to a single scriptlet.Validators need not evaluate whether or not the field is empty.  That vaidation will be performed automatically is the form row's Required status is set to true.">
        </record>
        <record jsxid="jsxenabled" jsxtext="Enabled" jsxtip="Sets whether or not the view for this item is enabled and mouse/keyboard events will be listened to." docgetter="getEnabled" docsetter="setEnabled" docdefault="Enabled (&lt;code&gt;tibco.uxcore.gui.FormField.STATEENABLED&lt;/code&gt;)" jsxexecute="objJSX.setEnabled(vntValue,true);" eval="1" jsxmask="jsxselect">
          <enum jsxid="tibco.uxcore.gui.FormField.STATEENABLED" jsxtext="Enabled" jsxvalue="1"/>
          <enum jsxid="tibco.uxcore.gui.FormField.STATEDISABLED" jsxtext="Disabled" jsxvalue="0"/>
        </record>
    </record>

	<record group="css" include="jsxplugin://tibco.uxcore.common/properties/master.xml"/>

	<record group="interaction" include="jsxplugin://tibco.uxcore.common/properties/master.xml"/>

	<record group="drag" include="jsxplugin://tibco.uxcore.common/properties/master.xml"/>

	<record group="move" include="jsxplugin://tibco.uxcore.common/properties/master.xml"/>

	<record group="metadata" include="jsxplugin://tibco.uxcore.common/properties/master.xml"/>

</data>