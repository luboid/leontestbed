jsx3.lang.Class.defineClass("com.tibco.cmi.newOperationBinding.NewOperationBinding",    jsx3.gui.Block,    null,    function(NewOperationBinding,instance){					var systemUtil = com.tibco.cmi.system.util;      var server = systemUtil.getServer();			var dwrEngine = com.tibco.cmi.dwr.Engine;			var dwrService = com.tibco.cmi.dwr.Service;						instance.onRsrcLoad = function(){				this.getServer().subscribe("newOperationBinding.getPB",this, this.getPB);			};						instance.getPB = function(objEvent){				NewOperationBinding.parentId = objEvent.PBID;				NewOperationBinding.protName = objEvent.protName;				this.getAvailableOpList();			}						instance.getAvailableOpList = function(){				var me = this;				var parentId = NewOperationBinding.parentId;				var protName = NewOperationBinding.protName;								var getHostProtservice = dwrEngine.loadService('OPBINDING','getAvailableOpList',[protName, parentId]);				getHostProtservice.subscribe(dwrService.ON_SUCCESS, me, me._callback_getAvailableOpList_onSuccess);				getHostProtservice.doCall();			}						instance._callback_getAvailableOpList_onSuccess = function(objEvent) {				var availableList = objEvent.data;								var cdf = new jsx3.xml.Document();				var root = cdf.createDocumentElement("data");				root.setAttribute("jsxid", "jsxroot");				for(var i = 0; i < availableList.length; i++) {					var record = root.createNode(jsx3.xml.Entity.TYPEELEMENT, "record");					var opBinding = availableList[i];										record.setAttribute("jsxid", opBinding);					record.setAttribute("opName", opBinding);					root.appendChild(record);				}				server.getJSXByName("mtxOperation").setSourceXML(cdf);			  server.getJSXByName("mtxOperation").repaint();			}						instance.save = function(){				var opBindingList = this.getSelectedItem();				for(var i = 0; i < opBindingList.size(); i++) {					var opName = opBindingList.get(i).getAttribute("opName");					var opBinding = new Object;					opBinding.pbvBinindex = NewOperationBinding.parentId;					opBinding.txId = opName;										var service = dwrEngine.loadService('OPBINDING','saveOpBinding',[opBinding]);					service.doCall();				}								this.getServer().publish({subject:"showEditProtocol"});							}						instance.cancel = function() {				this.getServer().publish({subject:"showEditProtocol"});				}						instance.getSelectedItem = function() {				var mtx = com.tibco.cmi.getJSXByName("mtxOperation");				var xml = mtx.getXML();				var itemList = xml.selectNodes("//record[@checked='1']");				return itemList;			}						instance.setEnabled = function(btnEnable) { 				var mtx = com.tibco.cmi.getJSXByName("mtxOperation");				if(btnEnable.getText() == "Enable All") {					for(var i = 0; i < mtx.getSortedIds().length; i++){						var recordId = mtx.getSortedIds()[i];						var record = mtx.getRecordNode(recordId);						record.setAttribute("checked",1);						mtx.redrawRecord(recordId, jsx3.xml.CDF.UPDATE);					}					btnEnable.setText("Disable All",true);				}								else {					for(var i = 0; i < mtx.getSortedIds().length; i++){						var recordId = mtx.getSortedIds()[i];						var record = mtx.getRecordNode(recordId);						record.setAttribute("checked",0);						mtx.redrawRecord(recordId, jsx3.xml.CDF.UPDATE);					}					btnEnable.setText("Enable All",true);				}					}    })