jsx3.lang.Class.defineClass("com.tibco.cmi.editProtocolBinding.EditProtocolBinding",    jsx3.gui.Block,    null,    function(EditProtocolBinding,instance){			var systemUtil = com.tibco.cmi.system.util;      var server = systemUtil.getServer();			var dwrEngine = com.tibco.cmi.dwr.Engine;			var dwrService = com.tibco.cmi.dwr.Service;						instance.onRsrcLoad = function(){				this.getServer().subscribe("showEditProtocol", this, this.showEditProtocol);				is.getProtocolBindingInfo();							};						instance.saveProtocol = function(){				this.getServer().publish({subject:"showEditAgreement"});							}						instance.cancel = function() {				this.getServer().publish({subject:"showEditAgreement"});				}						instance.newOperation = function() {        var server = com.tibco.cmi;        var masterDetail = com.tibco.cmi.getJSXByName("editProtocolLayout");        masterDetail.setSubcontainer1Pct("0",true);								var objContainer = this.getDescendantOfName("blkAddOperation");				var extPoint = "newOperation";				this.getPlugIn().getExtPoint(extPoint).processExts(jsx3.$F(function(ext,xml){            var uiId = xml.attr("uiId");            var extPlugIn = ext.getPlugIn();            extPlugIn.load().when(function(){                extPlugIn.loadRsrcComponent(uiId,objContainer)});            }).bind(this));       }						instance.showEditProtocol = function() {				com.tibco.cmi.getJSXByName("blkAddOperation").removeChildren();				var masterDetail = com.tibco.cmi.getJSXByName("editProtocolLayout");        masterDetail.setSubcontainer1Pct("100%",true);			}						instance.setEnabled = function(btnEnable, btnRemove, mtx) {				var idList = mtx.getSortedIds();				var enabled = 0;				for(var j=0;j<idList.length;j++){					var recordID = idList[j];					var item = mtx.getRecordNode(recordID);					if(item.getAttribute("checked") == 0) {						enabled = 1;										break;					}									}								for(var i = 0; i < idList.length;i++) {					var recordID = idList[i];					var item = mtx.getRecordNode(recordID);					item.setAttribute("checked",enabled);					mtx.redrawRecord(recordID, jsx3.xml.CDF.UPDATE);					}											btnRemove.setEnabled(enabled);				if(enabled) { 										btnEnable.setText("Disable All");					}				else {					btnEnable.setText("Enable All");				}					}						instance.changeState = function(btn, mtx) {				if(this.getSelectedItem(mtx).size() == 0)					btn.setEnabled(0);				else				  btn.setEnabled(1);			}						instance.getSelectedItem = function(mtx) {				var xml = mtx.getXML();				var itemList = xml.selectNodes("//record[@checked='1']");				return itemList;			}    })